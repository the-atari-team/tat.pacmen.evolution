include ft:fade

byte array HPOSP[4]=53248

byte array fadeoutlist[1] = [
0,%00111111,
0,%00001111,
0,%00000011,
0,%00000000,
2,%11111100,
4,%11111100,
6,%11111100,
6,%11110000,
6,%11000000,
6,%00000000,
4,%00111100,
2,%00111100,
2,%00001100,
2,%00000000,
4,%00110000,
4,%00000000
]

byte i
word addrInChar
byte andValue
byte char
byte index
byte value

procedure @initfade()
begin
  @move($b000, $b500, 768) // rescue font
end

word array pmadr[5] = [
$B400,
$B500,
$B600,
$B700,
$B300
]

byte array pmfade[1] = [
  %00010000,
  %00011000,
  %00111100,
  %01111110,
  %11111111,
  %11110111,
  %11100111,
  %11000011,
  %10000001,
  %00000000
]

byte j
word addr
byte ghost_x_pos = 133

procedure player_fadeout()
begin
  for j:=0 to 9 do
  begin
    value := pmfade[j]
    for i:=0 to 4 do
    begin
      addr := pmadr[i] + $21
      @fillbyte(value, addr, $b0)
    end
    @sleep(2)
  end

  ghost_x_pos := 0
//  hposp[0]:=0 wird per ghost_x_pos gesetzt
  hposp[1]:=0
  hposp[2]:=0
  hposp[3]:=0

end


procedure @fadeout()
begin
  player_fadeout()

  @initfade()
  index:=0
  for i:=0 to 15 do
  begin
    addrInChar := $b000 + fadeoutlist[index] // char 0 ist sowieso leer, deshalb + 8
    andValue := fadeoutlist[index + 1]

    for char := 0 to 95 do
    begin
//      value := @getByte(addrInChar) & andValue
      value := @mem[addrInChar] & andValue
//      @setByte(addrInChar, value)
      @mem[addrInChar] := value
      addrInChar := addrInChar + 1

//      value := @getByte(addrInChar) & andValue
      value := @mem[addrInChar] & andValue
//      @setByte(addrInChar, value)
      @mem[addrInChar] := value
      addrInChar := addrInChar + 7
    end
    @sleep(3)
    index := index + 2
  end
end

byte line
word addrInViewableChar

procedure @fadein()
begin
//  @move($b000, $b800, 768)
  for line:=0 to 7 do
  begin
    addrInChar := $b500+line
    addrInViewableChar := $b000+line

    for char:=0 to 95 do
    begin
//      value := @getByte(addrInChar)
      value := @mem[addrInChar]
//      @setByte(addrInViewableChar, value)
      @mem[addrInViewableChar] := value
      addrInChar := addrInChar + 8
      addrInViewableChar := addrInViewableChar + 8
    end
    @sleep(3)
  end
end

